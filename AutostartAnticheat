# AutostartMAC Version 2-Linux
# READ BELOW BEFORE USING SCRIPT

# This code can be ran on its own, or with AutoDemoAnalyzer for additional functionality. 
# To run this with ADA, place it in the same directory.

# Set this variable to the absolute path of your client_backend file
# ex. `client = '/steamapps/common/Team Fortress 2/megaanticheat stuff/client_backend'``
client = ''

# Set this variable to the web interface link MAC gives you
# ex. `gui = 'http://127.0.0.1:1984'`
gui = ''

# beyond this point is the actual code, you can finish reading here





from time import sleep
from os import path
from webbrowser import open as webopen
from psutil import process_iter
from subprocess import Popen
from importlib import util

def tf2chk(): # check if TF2 is open
    for proc in process_iter():
        if proc.name() == 'tf_linux64':
            return True
    return False

# used when it is required to run a thing while continuing execution
progs = []
def altopen(filepath):
    # progs list used later to close any programs launched with altopen
    progs.append(Popen(filepath, cwd=path.split(filepath)[0], stdout = None, stderr = None)) # cwd = relative path, ex. /a/b/ from a/b/c.file

try: # not actually trying to catch any exceptions, just making sure that MAC closes properly

    webopen("steam://rungameid/440") # if commented out during debugging, make sure to uncomment
    altopen(client)
    print('-- Waiting for TF2 --')
    sleep(10) # required, game can be a bit screwy when starting

    while not tf2chk(): sleep(1) # wait for tf2 to open

    webopen(gui) # do this later so that MAC has time to initialize

    # partially taken from stackoverflow
    ADAfound = False
    if util.find_spec("AutoDemoAnalyzer") is not None: # check to see if ada is found
        ADAfound = True
        print('-- Launching AutoDemoAnalyzer --')
        import AutoDemoAnalyzer as ADA

    while tf2chk():
        if ADAfound: ADA.mainloop()
        sleep(1) # wait for tf2 to close

    # let user read ADA output before exiting
    if ADAfound:
        print('*- Press Enter to exit -*')
        input()

    # can't close browser tabs easily so I leave it for future me
    # future me couldn't figure out how to do this without closing the entire window
    # closing happens after the ADA check so that users can mark cheaters caught by it
    print('-- Closing programs --')
    for item in progs: # close programs launched with altopen() earlier
        item.kill()

except Exception: # make sure MAC closes, this probably could be merged with the above using a `finally` but it's fine
    for item in progs: # close programs to prevent memory leak
        item.kill()
    raise
