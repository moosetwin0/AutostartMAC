# AutostartAnticheat Version 1.0
# READ BELOW BEFORE USING SCRIPT

# This code can be ran on its own, or with AutoDemoAnalyzer for additional functionality. To run it with ADA, simply put ADA in the same folder and run this script.

# You must set these variables to the paths of your client_backend and index.html files
# ex. `client = 'E:/SteamLibrary/steamapps/common/Team Fortress 2/megaanticheat stuff/client_backend.exe'``
client = ''
# ex. `gui = 'E:/SteamLibrary/steamapps/common/Team Fortress 2/megaanticheat stuff/gui/index.html'`
gui = ''

# beyond this point is the actual code, you can finish reading here



from time import sleep, time
import os
from webbrowser import open as webopen
import psutil
from subprocess import Popen
from importlib import util

# used when it is required to run a thing while continuing to execute
# I PUT THE POPEN INTO A LIST MUAHUAHUA
# this is terrible but I couldn't find a better way to run these simulataneously
progs = []
def altopen(dir, filename):
    if not ':' in dir: dir = os.path.expanduser(dir)
    progs.append(Popen(f"{dir + '\\' + filename}", cwd=f"{dir}", stdout = None, stderr = None)) #, shell=True

# check if a process is open
# may cause exception, me pls fix
def procchk(process): # process must be string of file name.extension, e.g. 'Taskmgr.exe'
    for proc in psutil.process_iter():
        if proc.name() == process:
            return True
    return False # else statement not needed, I feel clever hehehe

# format client string for altopen() 
client = client.rsplit('/', 1)
client[0] = client[0].replace('/', '\\')

print('-- Opening programs --')
webopen("steam://rungameid/440") # if commented out during debugging, make sure to uncomment
altopen(client[0], client[1])
os.popen(gui)

sleep(3) # required, game can be a bit screwy when starting

print('-- Waiting for TF2 --')
while not procchk('tf_win64.exe'): sleep(1) # wait for tf2 to open

# taken from stackoverflow
ADAfound = False
if util.find_spec("AutoDemoAnalyzer") is not None: # check to see if ada is found
    ADAfound = True
    print('-- Launching AutoDemoAnalyzer --')
    gamestarttime = time() # save timestamp for autodemoanalyzer
    import AutoDemoAnalyzer as ADA

print('-- TF2 detected, waiting for it to close --')
while procchk('tf_win64.exe'): 
    sleep(1) # wait for tf2 to close
    if ADAfound: ADA.mainloop(gamestarttime)

# let user read ADA output before exiting
if ADAfound:
    print('** Press Enter to exit AutoDemoAnalyzer **')
    input()

# can't close browser tabs easily so I leave it for future me
# future me couldn't figure out how to do this without closing the entire window
# closing happens after the ADA check so that users can mark cheaters caught by it
print('-- Closing programs --')
for item in progs: # for loop no longer required due to progs only holding one item, this was required in the past
    item.kill()
